type nat = Zero | S of nat
module Nat_ops =

struct
  let rec nat_of_int i =
    if i <= 0 then Zero
    else S (nat_of_int (i-1))
  let rec int_of_nat n =
    match n with
    | Zero -> 0
    | S m -> 1 + (int_of_nat m)
  let rec plus a b =
    match b with
    | Zero -> a
    | S c -> plus (S a) c
end

-----------------------------------------------------------------------------------
Lemma: plus (S a) b = S (plus a b)
base case: b = zero
Left:
plus (S a) b
={case}
plus (S a) zero
={plus definition}
match zero with
|zero -> (S a)
| S c -> plus (S (S a)) c 
={apply match}
S a 
={apply match}
match zero with
|zero -> (S a)
| S c -> plus (S (S a)) c 
={plus definition}
S {plus a zero}
={case}
S (plus a b) 

inductive step: plus (S a) (S b) = S(plus a (S b))
inductive hypothesis: plus (S a) b = S (plus a b)
left:
plus (S a) (S b)
={plus definition}
match (S b) with
|zero -> (S a)
|S c -> plus (S (S a))c 
={apply match}
plus (S (S a)) b
={Inductive Hypothesis}
S (plus (S a) b)

right:
S(plus a (S b))
={plus def}
match (S b) with
|zero -> (S a)
| S c -> plus (S (S a)) c
={apply match} 
S (plus (S a)) b
={Inductive hypothesis}
S (plus (S a) b)
left and right statement matches so lemma holds

-----------------------------------------------------------------------------------
P1) Prove plus Zero b = b
Base case: b = Zero

plus Zero b
={case}
plus Zero Zero
={plus definition}
match Zero with
|Zero -> Zero
| S c -> Plus (S zero) c
={apply match}
Zero
={evaluation}
b

Induction step: plus Zero ( S b)
Induction hypothesis (IH): Plus Zero b = b

Plus Zero (S b)
={plus definition}
match (S b) with
|Zero -> (S a)
| S c -> plus (S (S a)) c
={apply match}
plus (S Zero) b
={lemma}
S (plus Zero b)
={IH}
S b 
plus Zero b = b holds for all natural numbers b

-----------------------------------------------------------------------------------
P2) Prove plus a b = plus b a
Base case: Given any a, prove that for b = Zero statement holds true
Induction: Given any a, assume statements holds for b, show for S b
Inductive hypothesis: for all a, plus a b = plus b a  

Left:
plus a b 
={case}
plus a zero
={plus definition}
match zero with
|Zero -> a 
| S c -> plus (S a) c
={apply match}
a

Right:
plus b a 
={case}
plus zero a 
={plus definition}
match zero with
|zero -> a 
| S c -> plus (S a) c
={apply match }
a 

plus a b = plus b a holds for all natural numbers


-----------------------------------------------------------------------------------
P3) Prove plus a (plus b c) = plus (plus a b) c
Base case: given any c, prove that for c = zero statement hold true
Induction: given any a or b, assume statement holds for c. Show for S a and S b 
Inductive Hypothesis: for all a or b, plus a (plus b c) = plus (plus a b)c 

Left:
plus a (plus b c)
={case}
plus a (plus b zero)
={conclusion from p2}
plus a (plus zero b)
={conclusion from p1}
plus a b

Right:
plus (plus a b) c
={case}
plus (plus a b) zero
={conclusion from p2}
plus zero (plus a b)
={conclusion from p1}
plus a b 
plus a (plus b c) = plus (plus a b) c holds true for all natural numbers

