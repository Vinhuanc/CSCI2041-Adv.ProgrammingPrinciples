{\rtf1\ansi\ansicpg1252\cocoartf2709
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww20520\viewh16080\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \

\f1\b \ul 6.1 Specifications\

\f0\b0 \ulnone Abstract: forget information, so that different things can be treated as the same\
Specifications: intended behavior of abstraction. contract between a client of some unit of code and the implementer of that code\
Audience of specification:\
	- Clients: what they must guarantee(preconditions), what they can assume(postcondition)\
	- Implementers: what they can assume(preconditions), what they must guarantee(postconditions)\
- An implementation satisfies a specification if it provides the behavior described by the specification \
Writing specifications:\
	- sufficiently restrictive: rule out implementations that are useless to clients\
	- sufficiently general: not ruling out implementations that are useful to clients\
Abstraction by Specification: hide the details of implementations, reveal certain information about the module behavior without disclosing the details of the module implementations\
	- locality: benefits of abstraction by specifications\
	- modifiability: modules can be reimplemented without changing the implementation of other modules/functions\
\

\f1\b \ul 6.2 Function Documentation\

\f0\b0 \ulnone {{\NeXTGraphic Screenshot 2023-10-18 at 10.20.56 AM.png \width9580 \height2860 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f1\b  
\f0\b0 library specifications about the List.sort method\
\
Question\
- is the client the input? Then the implementer is the function?\
\

\f1\b \ul 6.2.1 Returns Clause\

\f0\b0 \ulnone How to specify sqr, a square-root function?\
	1) Describe its results, and let it be the returns clause(specification that describes the result of a function call)( aka postcondition: describe a condition that holds after the function is called)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 10.32.55 AM.png \width5700 \height600 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0  example of return clause.\
\
{{\NeXTGraphic Screenshot 2023-10-18 at 10.34.14 AM.png \width9480 \height480 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} return clause for a find function\
\

\f1\b \ul 6.2.2 Requires Clause\

\f0\b0 \ulnone - provide client with what inputs are allowed and what results will be for allowed inputs. Requires clause rules out bad inputs, aka precondition{{\NeXTGraphic Screenshot 2023-10-18 at 10.39.15 AM.png \width9840 \height680 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}  example of requires clause\
\

\f1\b \ul 6.2.3 Raises Clause\

\f0\b0 \ulnone - raise exception when the expected input condition isn\'92t met\
{{\NeXTGraphic Screenshot 2023-10-18 at 10.43.26 AM.png \width9580 \height700 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} example of raise clause\
\

\f1\b \ul 6.2.4 Examples Clause\

\f0\b0 \ulnone {{\NeXTGraphic Screenshot 2023-10-18 at 10.48.16 AM.png \width9160 \height660 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f1\b  
\f0\b0 example of illustrative example as part of a specification\
\

\f1\b \ul 6.2.5 The Specification Game\

\f0\b0 \ulnone - 
\f1\b \ul \

\f0\b0 \ulnone {{\NeXTGraphic Screenshot 2023-10-18 at 10.52.47 AM.png \width10420 \height1820 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f1\b \
\
\ul 6.2.6 Comments\

\f0\b0 \ulnone - provides comments in the functions\
\

\f1\b \ul 6.3 Module Documentation\

\f0\b0 \ulnone Data abstraction: a specification of operations on a set of values\
Data Structure: an implementation of a data abstraction with particular representation\

\f1\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 11.53.54 AM.png \width8480 \height7600 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0  
\f0\b0 example data abstraction/interface for a set of items of type \'91a\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 12.06.26 PM.png \width10080 \height4660 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  implementation of sets from list with duplicates\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 12.06.53 PM.png \width10560 \height4560 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  implementation of sets from lists without duplicates
\f1\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\
\
\ul 6.3.1 Abstraction Functions\ulnone \

\f0\b0 - syntax:	 (** AF: comment *)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 12.36.35 PM.png \width5240 \height4180 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 AF: \'93the loss of information\'94, mapping from the space of concrete values to the abstract space. Example: ListSet
\f1\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 12.39.18 PM.png \width9480 \height2340 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0  
\f0\b0 example of abstract function of duplicated lists\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 12.41.52 PM.png \width10400 \height1880 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  example of abstract function of no duplicate lists
\f1\b \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\ul 6.3.2 Implementing the Abstraction Function\

\f0\b0 \ulnone  
\f1\b \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 12.51.02 PM.png \width8940 \height3820 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  half example of adding \'93\'94 to elements of the list. Rewatch {\field{\*\fldinst{HYPERLINK "https://cs3110.github.io/textbook/chapters/correctness/module_docs.html"}}{\fldrslt video}} of 6.3.2 section\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf0 \
\ul 6.3.3 Commutative Diagrams\ulnone \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 1.05.10 PM.png \width5640 \height4460 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 1.05.22 PM.png \width4180 \height500 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0
\cf0 \
\ul 6.3.4 Representation Invariants\ulnone \

\f0\b0 - if the representation invariant holds for the input values, then it should hold for the output values, which is why its an invariant
\f1\b \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 1.08.59 PM.png \width5960 \height3620 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 1.12.20 PM.png \width8460 \height1720 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0  
\f0\b0 example of representation invariants of UniqListSet\
\

\f1\b \ul 6.3.5 Implementing the Representation Invariant\

\f0\b0 \ulnone - helpful to write internal function that is used to check that the representation invariant holds of a given data item. By default, call this function rep_ok.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 1.19.34 PM.png \width8800 \height900 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  representation invariant syntax\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 1.24.02 PM.png \width10260 \height7940 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  example of implementation of Set that uses the same data representation as UniqListSets\
\
\
\

\f1\b \ul 6.7 Proving Correctness\

\f0\b0 \ulnone Inductive reasoning: which evidence accumulates in support of a conclusion(correctness of the program)\
Induction: proof technique\
Deductive reasoning: proceed from premises and rules about logic to a valid conclusion\
Correctness: means that the program produces the right output according to a specification\
Specification of a factorial function: {{\NeXTGraphic Screenshot 2023-10-18 at 2.35.50 PM.png \width5640 \height640 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\

\f1\b \ul 6.7.1 Equality
\f0\b0 \ulnone \
When are two expressions equal:\
	1) when they are syntactically identical\
	2) when they are semantically equivalent(produces the same value)\
	Example: is 42 and 41+1 equal? Syntactically no, as they are different tokens. Semantically yes, both produce the value 42\
	Example: is {{\NeXTGraphic Screenshot 2023-10-18 at 2.43.43 PM.png \width3080 \height320 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} equal? Syntactically no, as they are different. Semantically yes, both produce a value that is the identity function.\
	In a case that for all inputs two functions produces the same output, can consider the functions to be equal:   {{\NeXTGraphic Screenshot 2023-10-18 at 2.47.08 PM.png \width4840 \height400 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}(Axiom of Extensionality)\
\
\

\f1\b \ul 6.7.2 Equational Reasoning
\f0\b0 \ulnone \
Example: {{\NeXTGraphic Screenshot 2023-10-18 at 3.05.50 PM.png \width3580 \height700 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} from rules of OCaml evaluation that {{\NeXTGraphic Screenshot 2023-10-18 at 3.06.40 PM.png \width2420 \height300 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} and that {{\NeXTGraphic Screenshot 2023-10-18 at 3.07.23 PM.png \width1780 \height320 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}{{\NeXTGraphic Screenshot 2023-10-18 at 3.07.30 PM.png \width1300 \height280 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
Which concludes to: {{\NeXTGraphic Screenshot 2023-10-18 at 3.08.36 PM.png \width4680 \height400 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
Simplifying the {{\NeXTGraphic Screenshot 2023-10-18 at 3.10.54 PM.png \width1060 \height360 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} out of the equation, conclude that {{\NeXTGraphic Screenshot 2023-10-18 at 3.11.24 PM.png \width2920 \height380 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
From the Youtube video: (by extracting h(h x) from both evaluated equations)\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 3.14.05 PM.png \width6940 \height2360 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0    			another way of structuring the claim:   {{\NeXTGraphic Screenshot 2023-10-18 at 3.15.51 PM.png \width2600 \height2440 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 3.25.35 PM.png \width9020 \height5980 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  equational reasoning {\field{\*\fldinst{HYPERLINK "https://cs3110.github.io/textbook/chapters/correctness/proving_correctness.html"}}{\fldrslt example}}#1\
 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 3.28.22 PM.png \width7100 \height5040 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  equational reasoning {\field{\*\fldinst{HYPERLINK "https://cs3110.github.io/textbook/chapters/correctness/proving_correctness.html"}}{\fldrslt example}} #2. Same equation as above\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 3.32.06 PM.png \width3200 \height3580 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  equational reasoning {\field{\*\fldinst{HYPERLINK "https://cs3110.github.io/textbook/chapters/correctness/proving_correctness.html"}}{\fldrslt example}} #3. Same equation as above\
\

\f1\b TIPS/HINTS/SYNTAXES
\f0\b0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 3.19.29 PM.png \width1360 \height1780 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 	{{\NeXTGraphic Screenshot 2023-10-18 at 3.21.24 PM.png \width5760 \height1000 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}trick: replace << with (    then add in missing-right hand parenthesis\
\

\f1\b \ul 6.7.3 Induction on Natural Numbers\

\f0\b0 \ulnone \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 6.33.48 PM.png \width7960 \height6840 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  induction proof syntax\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 6.38.37 PM.png \width5980 \height4180 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 . {{\NeXTGraphic Screenshot 2023-10-18 at 6.35.36 PM.png \width4540 \height5980 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}   {{\NeXTGraphic Screenshot 2023-10-18 at 6.37.00 PM.png \width3360 \height4920 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} example of inductive proof on an even function \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 6.43.07 PM.png \width6480 \height1380 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  induction principle for natural numbers. Base case: prove P(0), Inductive case: P(K + 1), under the assumption of the inductive hypothesis P(k)\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 6.50.15 PM.png \width6380 \height780 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  sumto function, sums the non-negative integers up to n\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 6.50.45 PM.png \width7980 \height9160 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  example of using induction to prove the correctness of sumto\
\

\f1\b \ul 6.7.4 Programs as. Specifications\

\f0\b0 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 7.15.54 PM.png \width7620 \height1280 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0    {{\NeXTGraphic Screenshot 2023-10-18 at 7.16.07 PM.png \width3060 \height2540 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}{{\NeXTGraphic Screenshot 2023-10-18 at 7.38.35 PM.png \width5040 \height600 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 7.35.35 PM.png \width8160 \height14120 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  proof of tail-recursive function fact_tr is equivalent to fact function\
\

\f1\b \ul 6.7.5 Recursion vs Iteration\

\f0\b0 \ulnone - we added an accumulator as an extra argument to make the factorial function tail recursive.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 7.56.14 PM.png \width5280 \height600 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0      recursive function, i(concrete value) and op(operator)     {{\NeXTGraphic Screenshot 2023-10-18 at 7.57.31 PM.png \width1500 \height940 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 8.00.58 PM.png \width3740 \height1400 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  tail-recursive iterative same function as above. i(concrete value) and op(operator)   {{\NeXTGraphic Screenshot 2023-10-18 at 8.04.49 PM.png \width1940 \height1220 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 8.14.17 PM.png \width9220 \height13020 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-18 at 8.17.34 PM.png \width3660 \height1040 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}prove that f_r and f_tr computes the same function. We will discover certain conditions that must hold of I and op to make the transformation to tail recursive to be correct\
\
Applying the above theorem to get a tail-recursive version of the sumto function:\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 8.19.04 PM.png \width4780 \height1400 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  recursive sumto function\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-18 at 8.19.23 PM.png \width5780 \height1060 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  tail-recursive sumto function\
\

\f1\b \ul 6.7.6 Termination\

\f0\b0 \ulnone Partial correctness: if a program terminates, then its output is correct\
Total correctness: a program does terminate, and its output is correct\
\
\
\

\f1\b \ul 6.8 Structural Induction\
\
6.8.1 Induction on Naturals\

\f0\b0 \ulnone \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 1.11.57 PM.png \width2740 \height1180 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-20 at 1.12.10 PM.png \width2560 \height1420 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}constructor Z represents zero, and the constructor S represents the successor of another natural number\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 1.14.49 PM.png \width2720 \height1020 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-20 at 1.15.16 PM.png \width4140 \height380 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 1.19.41 PM.png \width5200 \height8260 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  proof example for natural numbers\
\

\f1\b \ul 6.8.2 Induction on Lists\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone {{\NeXTGraphic Screenshot 2023-10-20 at 1.30.18 PM.png \width4880 \height600 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0  
\f0\b0 {{\NeXTGraphic Screenshot 2023-10-20 at 1.30.30 PM.png \width3740 \height1620 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 1.30.43 PM.png \width7260 \height7460 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  prove that append is associative\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul \ulc0 6.8.3 A theorem about folding\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 1.36.23 PM.png \width6220 \height7800 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  prove the fold_left and fold_right theorem \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 1.46.19 PM.png \width7700 \height9480 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  proving that with its own lemma{{\NeXTGraphic Screenshot 2023-10-20 at 1.46.54 PM.png \width6240 \height4500 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul 6.8.4 Induction on Trees\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone {{\NeXTGraphic Screenshot 2023-10-20 at 1.59.57 PM.png \width6380 \height540 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0  
\f0\b0 {{\NeXTGraphic Screenshot 2023-10-20 at 2.00.18 PM.png \width7480 \height1060 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}
\f1\b  
\f0\b0 {{\NeXTGraphic Screenshot 2023-10-20 at 2.00.28 PM.png \width3920 \height2400 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 2.00.39 PM.png \width6000 \height760 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 2.00.55 PM.png \width3220 \height1300 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 2.01.06 PM.png \width6540 \height7080 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  prove that reflect on trees is an involution\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul 6.8.5 Induction Principles for All Variants\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-20 at 2.08.28 PM.png \width8940 \height7520 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  example: induction principle for all variants\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul 6.8.6 Induction and Recursion\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone Inductive proof: a recursive program that shows how to construct evidence for a theorem involving algebraic data type(ADT)\
Structure: structure of an ADT determines the structure of proofs and programs\
Constructor: constructor of an ADT are the organizational principle of both proofs and programs\
\
- In a proof, we have a base or inductive case for each constructor\
- In a program, we have a pattern-matching case for each constructor\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul 6.9 Algebraic Specification\
\
6.9.1 Example: Stacks\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-22 at 9.52.55 PM.png \width3600 \height1900 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0   {{\NeXTGraphic Screenshot 2023-10-22 at 9.53.44 PM.png \width7960 \height1100 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}   stack datatype and equations to describe how the operations work\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-22 at 10.01.48 PM.png \width4360 \height1440 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  with the above 4 equations, able to deduce a lot of how any sequence of stack operations must work\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-22 at 10.04.11 PM.png \width5720 \height1920 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-22 at 10.04.16 PM.png \width2260 \height1420 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} implementing stacks as lists, example of proof of equation #3\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul 6.9.2 Example: Queues\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 10.34.22 AM.png \width3520 \height1920 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-23 at 10.42.02 AM.png \width6440 \height1460 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}  queue datatype and equation stop describe queue operations\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 10.53.40 AM.png \width4100 \height1740 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  example of using queue operations \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 10.55.08 AM.png \width3820 \height1920 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-23 at 10.55.16 AM.png \width3940 \height2160 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} {{\NeXTGraphic Screenshot 2023-10-23 at 10.56.40 AM.png \width3740 \height2180 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} {{\NeXTGraphic Screenshot 2023-10-23 at 10.57.43 AM.png \width7240 \height3280 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul 6.9.3 Example: Batched Queues\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone Batched queues: represent a queue with two lists\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 11.03.30 AM.png \width7060 \height4300 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-23 at 6.10.36 PM.png \width8120 \height1080 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 6.12.23 PM.png \width2580 \height2380 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-23 at 6.12.32 PM.png \width5900 \height6140 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}  {{\NeXTGraphic Screenshot 2023-10-23 at 6.28.11 PM.png \width6520 \height6500 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬} {{\NeXTGraphic Screenshot 2023-10-23 at 6.33.16 PM.png \width2920 \height3380 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 7.29.00 PM.png \width7600 \height11140 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 7.29.45 PM.png \width7880 \height5780 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 7.29.56 PM.png \width4980 \height6600 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \ul 6.9.4 Designing algebraic specifications\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\b0 \cf0 \ulnone \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 {{\NeXTGraphic Screenshot 2023-10-23 at 7.35.38 PM.png \width3920 \height2020 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0  {{\NeXTGraphic Screenshot 2023-10-23 at 7.36.04 PM.png \width6360 \height2020 \appleattachmentpadding0 \appleembedtype0 \appleaqc
}¬}\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0
\cf0 \
\
\
\
\
\
\
\
\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f1\b \cf0 \
}